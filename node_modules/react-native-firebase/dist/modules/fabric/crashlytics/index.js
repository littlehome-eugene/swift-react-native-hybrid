/**
 * 
 * Crash Reporting representation wrapper
 */
import ModuleBase from '../../../utils/ModuleBase';

export default class Crashlytics extends ModuleBase {
  static _NAMESPACE = 'crashlytics';
  static _NATIVE_MODULE = 'RNFirebaseCrashlytics';

  constructor(firebaseApp, options = {}) {
    super(firebaseApp, options);
  }

  /**
   * Forces a crash. Useful for testing your application is set up correctly.
   */
  crash() {
    this._native.crash();
  }

  /**
   * Logs a message that will appear in any subsequent crash reports.
   * @param {string} message
   */
  log(message) {
    this._native.log(message);
  }

  /**
   * Logs a non fatal exception.
   * @param {string} code
   * @param {string} message
   */
  recordError(code, message) {
    this._native.recordError(code, message);
  }

  /**
   * Set a boolean value to show alongside any subsequent crash reports.
   */
  setBoolValue(key, value) {
    this._native.setBoolValue(key, value);
  }

  /**
   * Set a float value to show alongside any subsequent crash reports.
   */
  setFloatValue(key, value) {
    this._native.setFloatValue(key, value);
  }

  /**
   * Set an integer value to show alongside any subsequent crash reports.
   */
  setIntValue(key, value) {
    this._native.setIntValue(key, value);
  }

  /**
   * Set a string value to show alongside any subsequent crash reports.
   */
  setStringValue(key, value) {
    this._native.setStringValue(key, value);
  }

  /**
   * Set the user ID to show alongside any subsequent crash reports.
   */
  setUserIdentifier(userId) {
    this._native.setUserIdentifier(userId);
  }
}

export const statics = {};